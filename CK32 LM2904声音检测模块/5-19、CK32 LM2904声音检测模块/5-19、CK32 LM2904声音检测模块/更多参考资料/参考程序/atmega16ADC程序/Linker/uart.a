;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <string.h>
;#include "uart.h"
;#include "myfun.h"
;
;/**************************************************************************
; - 函数属性：外部，使用户使用
; - 参数说明：无
; - 返回说明：无
; **************************************************************************/
;
;void UART_Init()
; 0001 000D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 000E     UCSRA = 0x00;//不倍速
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 000F     UCSRB = 0xD8;//使能接收中断
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 0010     UCSRC = 0x86;//偶校验,1位停止位
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 0011     UBRRL = 0x47;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 0012     UBRRH = 0x00; //9600波特率@11.0592M
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0013 }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;
;/**************************************************************************
; - 函数属性：外部，使用户使用
; - 参数说明：mydata:要发送的一个字节
; - 返回说明：无
; - 注：发送一个字节，是串口发送的基础操作
; **************************************************************************/
;
;void UART_Send_Byte(unsigned char mydata)
; 0001 001E {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 001F     while(!(UCSRA & (1 << UDRE)));
;	mydata -> Y+0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0020     UDR=mydata;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0021 
; 0001 0022 }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;
;/**************************************************************************
; - 功能描述：串口发送0d 0a ，即回车换行
; - 隶属模块：STC51串口操作
; - 函数属性：外部，使用户使用
; - 参数说明：无
; - 返回说明：无
; - 注：此函数就是发送0d 0a这两个字节，在“超级终端”上会有回车换行的效果
; **************************************************************************/
;
;void UART_Send_Enter()
; 0001 002E {
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0001 002F  UART_Send_Byte(0x0d);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 0030  UART_Send_Byte(0x0a);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0001 0031 }
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;
;/**************************************************************************
; - 功能描述：单片机的串口发送字符串
; - 函数属性：外部，使用户使用
; - 参数说明：s:指向字符串的指针
; - 返回说明：无
; - 注：如果在字符串中有'\n'，则会发送一个回车换行
; **************************************************************************/
;
;void UART_Send_Str(char *s)
; 0001 003C {
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 003D  int len=strlen(s)-1;
; 0001 003E  int i;
; 0001 003F  for(i=0;i<len;i++)
;PCODE: $00000034 VOL: 0
;	*s -> Y+4
;	len -> R16,R17
;	i -> R18,R19
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0001 0040  UART_Send_Byte(s[i]);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0001 0041 if(s[i]=='\n')
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0001 0042  {
; 0001 0043   UART_Send_Enter();
;PCODE: $00000054 VOL: 0
; 0001 0044  }
; 0001 0045  else
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0001 0046  {
; 0001 0047   UART_Send_Byte(s[i]);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 0048  }
;PCODE: $0000005D VOL: 0
; 0001 0049 }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;
;/**************************************************************************
; - 功能描述：单片机的串口发送数值
; - 隶属模块：STC51串口操作
; - 函数属性：外部，使用户使用
; - 参数说明：dat:要发送的数值
; - 返回说明：无
; - 注：函数中会将数值转为相应的字符串，发送出去。比如 4567 转为 "4567"
; **************************************************************************/
;
;void UART_Put_Num(unsigned long dat)
; 0001 0055 {
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0001 0056  char temp[20];
; 0001 0057  u32tostr(dat,temp);
;PCODE: $00000064 VOL: 0
;	dat -> Y+20
;	temp -> Y+0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0001 0058  UART_Send_Str(temp);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0001 0059 }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;
;/**************************************************************************
; - 功能描述：单片机的串口发送调试信息
; - 隶属模块：串口操作
; - 函数属性：外部，使用户使用
; - 参数说明：inf:指向提示信息字符串的指针
;             dat:一个数值，前面的提示信息就是在说明这个数值的意义
; - 返回说明：无
; **************************************************************************/
;
;void UART_Put_Inf(char *inf,unsigned long dat)
; 0001 0065 {
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0001 0066  UART_Send_Str(inf);
;	*inf -> Y+4
;	dat -> Y+0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0001 0067  UART_Put_Num(dat);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0001 0068  UART_Send_Str("\n");
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0001 0069 }
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0

	.DSEG
_0x2000B:
	.BYTE 0x2
;
